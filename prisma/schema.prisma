generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum role {
  superadmin // rol solo para el dueño de todo el sistema
  user
  admin
}

model usuario {
  id             Int      @id @default(autoincrement())
  createdat      DateTime @default(now())
  email          String   @unique
  nombrecompleto String?
  apellidos      String?
  clave          String?
  activo         Boolean? @default(true)
  fotografia     String?
  rol            role     @default(user)
  empresaid      Int?
  empresa        empresa? @relation(fields: [empresaid], references: [idempresa])
}

model empresa {
  idempresa        Int         @id @default(autoincrement())
  nombreempresa    String
  direccion        String
  emailcorporativo String?
  telefono         String?
  iva              String?
  nit              String?
  createdat        DateTime    @default(now())
  usuarios         usuario[] // Relación con usuarios
  productos        producto[] // Relación con productos
  compras          compra[] //relacion con compras
  ventas           venta[] //relacion con ventas
  proveedores      proveedor[] //relacion con proveedores
  clientes         cliente[] //relacion con clientes
}

model cliente {
  idcliente     Int      @id @default(autoincrement())
  fecharegistro DateTime @default(now())
  nombre        String
  telefono      String?
  direccion     String?
  email         String
  ventas        venta[]
  empresaid     Int? //para saber a que empresa pertenece
  empresa       empresa? @relation(fields: [empresaid], references: [idempresa])
}

model producto {
  id          Int             @id @default(autoincrement())
  nombre      String
  precio      Float
  existencias Int
  createdat   DateTime        @default(now())
  empresaid   Int //Para saber a que empresa pertenece
  empresa     empresa         @relation(fields: [empresaid], references: [idempresa])
  ventas      ventadetalle[]
  compras     compradetalle[]
}

model venta {
  id        Int            @id @default(autoincrement())
  tipoventa Int            @default(1) // para saber si sera cf ccf exportacion, etc
  fecha     DateTime       @default(now())
  total     Float
  detalles  ventadetalle[]
  empresaid Int //Para saber a que empresa pertenece
  clienteid Int //para saber a que cliente
  pdf       String?
  empresa   empresa        @relation(fields: [empresaid], references: [idempresa])
  cliente   cliente        @relation(fields: [clienteid], references: [idcliente])
}

model ventadetalle {
  id         Int      @id @default(autoincrement())
  cantidad   Int
  precio     Float
  productoid Int
  ventaid    Int
  producto   producto @relation(fields: [productoid], references: [id])
  venta      venta    @relation(fields: [ventaid], references: [id])
}

model proveedor {
  id            Int      @id @default(autoincrement())
  fecharegistro DateTime @default(now())
  nombre        String
  email         String
  telefono      String
  direccion     String
  iva           String?
  nit           String?
  empresaid     Int? //Para saber a que empresa pertenece
  empresa       empresa? @relation(fields: [empresaid], references: [idempresa])
  compras       compra[]
}

model compra {
  id            Int             @id @default(autoincrement())
  fecha         DateTime        @default(now())
  total         Float
  iva           Float
  numerofactura Int
  empresaid     Int //Para saber a que empresa pertenece
  proveedorid   Int //Para saber a que proveedor ha comprado
  empresa       empresa         @relation(fields: [empresaid], references: [idempresa])
  proveedor     proveedor       @relation(fields: [proveedorid], references: [id])
  detalles      compradetalle[]
}

model compradetalle {
  id         Int      @id @default(autoincrement())
  cantidad   Int
  precio     Float
  productoid Int
  compraid   Int
  producto   producto @relation(fields: [productoid], references: [id])
  compra     compra   @relation(fields: [compraid], references: [id])
}
